# -*- coding: utf-8 -*-
# Generated by Django 1.9.3 on 2016-03-05 13:26
from __future__ import unicode_literals

import dj_markdown.datatype
import dj_markdown.extensions.autolink
import dj_markdown.extensions.automail
import dj_markdown.extensions.comment
import dj_markdown.extensions.escape
import dj_markdown.extensions.fenced_code
import dj_markdown.extensions.semi_sane_lists
import dj_markdown.extensions.strikethrough
import dj_markdown.models
import dj_markdown.renderer
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name="Blog's url")),
                ('about', dj_markdown.models.MarkdownField(blank=True, cls_name='about_cls', default=dj_markdown.datatype.Markdown(html='', renderer=dj_markdown.renderer.BaseRenderer(extensions=['markdown.extensions.smarty', 'markdown.extensions.abbr', 'markdown.extensions.def_list', 'markdown.extensions.tables', 'markdown.extensions.smart_strong', dj_markdown.extensions.fenced_code.FencedCodeExtension(), dj_markdown.extensions.escape.EscapeHtmlExtension(), dj_markdown.extensions.semi_sane_lists.SemiSaneListExtension(), dj_markdown.extensions.strikethrough.StrikethroughExtension(), dj_markdown.extensions.autolink.AutolinkExtension(), dj_markdown.extensions.automail.AutomailExtension(), dj_markdown.extensions.comment.CommentExtension()]), source=''), help_text='Tell us about yourself (use the markdown, Luke!)', markdown=dj_markdown.datatype.Markdown, renderer=dj_markdown.renderer.BaseRenderer(extensions=['markdown.extensions.smarty', 'markdown.extensions.abbr', 'markdown.extensions.def_list', 'markdown.extensions.tables', 'markdown.extensions.smart_strong', dj_markdown.extensions.fenced_code.FencedCodeExtension(), dj_markdown.extensions.escape.EscapeHtmlExtension(), dj_markdown.extensions.semi_sane_lists.SemiSaneListExtension(), dj_markdown.extensions.strikethrough.StrikethroughExtension(), dj_markdown.extensions.autolink.AutolinkExtension(), dj_markdown.extensions.automail.AutomailExtension(), dj_markdown.extensions.comment.CommentExtension()]), renderer_name='about_renderer', state_name='_about_state', verbose_name='About')),
                ('_about_html', dj_markdown.models.HtmlCacheField(blank=True, editable=False, markdown_field=dj_markdown.models.MarkdownField(blank=True, cls_name='about_cls', default=dj_markdown.datatype.Markdown(html='', renderer=dj_markdown.renderer.BaseRenderer(extensions=['markdown.extensions.smarty', 'markdown.extensions.abbr', 'markdown.extensions.def_list', 'markdown.extensions.tables', 'markdown.extensions.smart_strong', dj_markdown.extensions.fenced_code.FencedCodeExtension(), dj_markdown.extensions.escape.EscapeHtmlExtension(), dj_markdown.extensions.semi_sane_lists.SemiSaneListExtension(), dj_markdown.extensions.strikethrough.StrikethroughExtension(), dj_markdown.extensions.autolink.AutolinkExtension(), dj_markdown.extensions.automail.AutomailExtension(), dj_markdown.extensions.comment.CommentExtension()]), source=''), help_text='Tell us about yourself (use the markdown, Luke!)', markdown=dj_markdown.datatype.Markdown, renderer=dj_markdown.renderer.BaseRenderer(extensions=['markdown.extensions.smarty', 'markdown.extensions.abbr', 'markdown.extensions.def_list', 'markdown.extensions.tables', 'markdown.extensions.smart_strong', dj_markdown.extensions.fenced_code.FencedCodeExtension(), dj_markdown.extensions.escape.EscapeHtmlExtension(), dj_markdown.extensions.semi_sane_lists.SemiSaneListExtension(), dj_markdown.extensions.strikethrough.StrikethroughExtension(), dj_markdown.extensions.autolink.AutolinkExtension(), dj_markdown.extensions.automail.AutomailExtension(), dj_markdown.extensions.comment.CommentExtension()]), renderer_name='about_renderer', state_name='_about_state', verbose_name='About'), null=True)),
                ('type', models.CharField(choices=[('O', 'Open'), ('P', 'Private')], default='0', max_length=2, verbose_name='Type of the blog')),
                ('join_condition', models.CharField(choices=[('A', 'Anyone can join'), ('K', 'Only users with high karma can join'), ('I', 'Manual approval required')], default='A', max_length=2, verbose_name='Who can join the blog')),
                ('join_karma_threshold', models.SmallIntegerField(default=0, verbose_name='Join karma threshold')),
                ('post_condition', models.CharField(choices=[('A', 'Anyone can add post'), ('K', 'Only users with high karma can add post')], default='A', max_length=2, verbose_name='Who can add posts')),
                ('post_membership_required', models.BooleanField(default=False, verbose_name='Require membership to write posts')),
                ('post_karma_threshold', models.SmallIntegerField(default=0, verbose_name='Post karma threshold')),
                ('comment_condition', models.CharField(choices=[('A', 'Anyone can comment'), ('K', 'Only users with high karma can comment')], default='A', max_length=2, verbose_name='Who can comment in the blog')),
                ('comment_membership_required', models.BooleanField(default=False, verbose_name='Require membership to write comments')),
                ('comment_karma_threshold', models.SmallIntegerField(default=0, verbose_name='Comment karma threshold')),
            ],
            options={
                'ordering': ('name',),
                'verbose_name': 'Blog',
                'verbose_name_plural': 'Blogs',
            },
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ban_expiration', models.DateTimeField(auto_now_add=True)),
                ('role', models.CharField(choices=[('O', 'Owner'), ('M', 'Member'), ('B', 'Banned'), ('A', 'Administrator')], default='M', max_length=2)),
                ('can_change_settings', models.BooleanField(default=False, verbose_name="Can change blog's settings")),
                ('can_edit_posts', models.BooleanField(default=False, verbose_name='Can edit posts')),
                ('can_delete_posts', models.BooleanField(default=False, verbose_name='Can delete posts')),
                ('can_edit_comments', models.BooleanField(default=False, verbose_name='Can edit comments')),
                ('can_delete_comments', models.BooleanField(default=False, verbose_name='Can delete comments')),
                ('can_ban', models.BooleanField(default=False, verbose_name='Can ban a member')),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.Blog')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='blog',
            name='members',
            field=models.ManyToManyField(editable=False, through='blog.Membership', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='membership',
            unique_together=set([('user', 'blog')]),
        ),
    ]
