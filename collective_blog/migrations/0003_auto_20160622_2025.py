# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-06-22 17:25
from __future__ import unicode_literals

import collective_blog.models.blog
import collective_blog.models.comment
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import mptt.fields
import s_markdown.datatype
import s_markdown.extensions.autolink
import s_markdown.extensions.automail
import s_markdown.extensions.comment
import s_markdown.extensions.escape
import s_markdown.extensions.fenced_code
import s_markdown.extensions.semi_sane_lists
import s_markdown.extensions.strikethrough
import s_markdown.models
import s_markdown.renderer
import s_voting.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('collective_blog', '0002_auto_20160622_1938'),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_created=True, blank=True, editable=False)),
                ('content', s_markdown.models.MarkdownField(blank=True, cls_name='content_cls', default=s_markdown.datatype.Markdown(html='', renderer=s_markdown.renderer.BaseRenderer(extensions=['markdown.extensions.smarty', 'markdown.extensions.abbr', 'markdown.extensions.def_list', 'markdown.extensions.tables', 'markdown.extensions.smart_strong', s_markdown.extensions.fenced_code.FencedCodeExtension(), s_markdown.extensions.escape.EscapeHtmlExtension(), s_markdown.extensions.semi_sane_lists.SemiSaneListExtension(), s_markdown.extensions.strikethrough.StrikethroughExtension(), s_markdown.extensions.autolink.AutolinkExtension(), s_markdown.extensions.automail.AutomailExtension(), s_markdown.extensions.comment.CommentExtension()]), source=''), markdown=s_markdown.datatype.Markdown, renderer=s_markdown.renderer.BaseRenderer(extensions=['markdown.extensions.smarty', 'markdown.extensions.abbr', 'markdown.extensions.def_list', 'markdown.extensions.tables', 'markdown.extensions.smart_strong', s_markdown.extensions.fenced_code.FencedCodeExtension(), s_markdown.extensions.escape.EscapeHtmlExtension(), s_markdown.extensions.semi_sane_lists.SemiSaneListExtension(), s_markdown.extensions.strikethrough.StrikethroughExtension(), s_markdown.extensions.autolink.AutolinkExtension(), s_markdown.extensions.automail.AutomailExtension(), s_markdown.extensions.comment.CommentExtension()]), renderer_name='content_renderer', state_name='_content_state', verbose_name='Comment')),
                ('_content_html', s_markdown.models.HtmlCacheField(blank=True, editable=False, markdown_field=s_markdown.models.MarkdownField(blank=True, cls_name='content_cls', default=s_markdown.datatype.Markdown(html='', renderer=s_markdown.renderer.BaseRenderer(extensions=['markdown.extensions.smarty', 'markdown.extensions.abbr', 'markdown.extensions.def_list', 'markdown.extensions.tables', 'markdown.extensions.smart_strong', s_markdown.extensions.fenced_code.FencedCodeExtension(), s_markdown.extensions.escape.EscapeHtmlExtension(), s_markdown.extensions.semi_sane_lists.SemiSaneListExtension(), s_markdown.extensions.strikethrough.StrikethroughExtension(), s_markdown.extensions.autolink.AutolinkExtension(), s_markdown.extensions.automail.AutomailExtension(), s_markdown.extensions.comment.CommentExtension()]), source=''), markdown=s_markdown.datatype.Markdown, renderer=s_markdown.renderer.BaseRenderer(extensions=['markdown.extensions.smarty', 'markdown.extensions.abbr', 'markdown.extensions.def_list', 'markdown.extensions.tables', 'markdown.extensions.smart_strong', s_markdown.extensions.fenced_code.FencedCodeExtension(), s_markdown.extensions.escape.EscapeHtmlExtension(), s_markdown.extensions.semi_sane_lists.SemiSaneListExtension(), s_markdown.extensions.strikethrough.StrikethroughExtension(), s_markdown.extensions.autolink.AutolinkExtension(), s_markdown.extensions.automail.AutomailExtension(), s_markdown.extensions.comment.CommentExtension()]), renderer_name='content_renderer', state_name='_content_state', verbose_name='Comment'), null=True)),
                ('rating', s_voting.models.VoteCacheField(default=0, query=s_voting.models._default_cache_query, vote_model=collective_blog.models.comment.CommentVote)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('author', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='collective_blog.Comment')),
                ('post', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='collective_blog.Post', verbose_name='Post')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('_default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='CommentVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vote', models.SmallIntegerField(choices=[(1, '+1'), (-1, '-1')])),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='collective_blog.Comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes_for_collective_blog_commentvote', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='membership',
            name='overall_comments_rating',
            field=s_voting.models.VoteCacheField(default=0, query=collective_blog.models.blog._overall_comments_rating_cache_query, vote_model=collective_blog.models.comment.CommentVote),
        ),
        migrations.AlterUniqueTogether(
            name='commentvote',
            unique_together=set([('user', 'object')]),
        ),
    ]
